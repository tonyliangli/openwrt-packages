--- a/luci-app-turboacc/luasrc/controller/turboacc.lua
+++ b/luci-app-turboacc/luasrc/controller/turboacc.lua
@@ -14,7 +14,7 @@ function index()
 end
 
 local function fastpath_status()
-	return luci.sys.call("{ [ -e /sys/module/xt_FLOWOFFLOAD/refcnt ] && [ x$(cat /sys/module/xt_FLOWOFFLOAD/refcnt 2>/dev/null) != x0 ]; } || lsmod | grep -q fast_classifier") == 0
+	return luci.sys.call("lsmod | grep -q natflow || lsmod | grep -q fast_classifier") == 0
 end
 
 local function bbr_status()

--- a/luci-app-turboacc/root/etc/init.d/turboacc
+++ b/luci-app-turboacc/root/etc/init.d/turboacc
@@ -213,10 +213,21 @@ revert_dns() {
 start(){
 	inital_conf
 
-	uci set firewall.@defaults[0].flow_offloading="${sw_flow}"
-	uci set firewall.@defaults[0].flow_offloading_hw="${hw_flow}"
-	uci set firewall.@defaults[0].fullcone="${fullcone_nat}"
-	uci commit firewall
+	test -c /dev/natflow_ctl && {
+	enable_natflow="${sw_flow}"
+	enable_natflow_hw="${hw_flow}"
+	if [ "x${enable_natflow}" = "x1" ]; then
+		if [ "x`uci get firewall.@defaults[0].flow_offloading 2>/dev/null`" = "x1" ]; then
+			uci set firewall.@defaults[0].flow_offloading=0
+			uci set firewall.@defaults[0].flow_offloading_hw=0
+			uci commit firewall
+			/etc/init.d/firewall reload
+		fi
+	fi
+	echo debug=3 >/dev/natflow_ctl
+	echo disabled=$((!enable_natflow)) >/dev/natflow_ctl
+	echo hwnat=$((enable_natflow_hw)) >/dev/natflow_ctl
+	}
 
 	[ "${sw_flow}" -ne "1" ] && [ "${sfe_flow}" -eq "1" ] && {
 		lsmod | grep -q fast_classifier || modprobe fast_classifier 2>"/dev/null"
@@ -264,10 +275,8 @@ start(){
 stop(){
 	inital_conf
 
-	uci set firewall.@defaults[0].flow_offloading="${sw_flow}"
-	uci set firewall.@defaults[0].flow_offloading_hw="${hw_flow}"
-	uci set firewall.@defaults[0].fullcone="${fullcone_nat}"
-	uci commit firewall
+	echo disabled=$((!enable_natflow)) >/dev/natflow_ctl
+	echo hwnat=$((enable_natflow_hw)) >/dev/natflow_ctl
 
 	[ "${sfe_flow}" -ne "1" ] && {
 		echo "0" > "/sys/fast_classifier/skip_to_bridge_ingress" 2>"/dev/null"

--- a/natflow/Makefile
+++ b/natflow/Makefile
@@ -51,17 +51,4 @@ define Build/Compile
 	$(call Build/Compile/natflow)
 endef
 
-define Package/natflow-boot
-  CATEGORY:=X
-  SUBMENU:=Fast Forward Stacks
-  TITLE:=natflow boot init script
-  DEPENDS:= +kmod-natflow
-endef
-
-define Package/natflow-boot/install
-	$(INSTALL_DIR) $(1)/etc/init.d
-	$(INSTALL_BIN) ./files/natflow-boot.init $(1)/etc/init.d/natflow-boot
-endef
-
 $(eval $(call KernelPackage,natflow))
-$(eval $(call BuildPackage,natflow-boot))

--- a/luci-app-turboacc/po/zh_Hans/turboacc.po
+++ b/luci-app-turboacc/po/zh_Hans/turboacc.po
@@ -11,16 +11,16 @@ msgid "Opensource Flow Offloading driver (Fast Path or Hardware NAT)"
 msgstr "开源流量分载驱动 (支持 Fast Path 或者 硬件 NAT)"
 
 msgid "Software flow offloading"
-msgstr "软件流量分载"
+msgstr "启用转发加速(natflow)"
 
 msgid "Software based offloading for routing/NAT"
-msgstr "基于软件的 Routing/NAT 分载"
+msgstr ""
 
 msgid "Hardware flow offloading"
-msgstr "硬件流量分载"
+msgstr "启用硬件转发加速"
 
 msgid "Requires hardware NAT support. Implemented at least for mt76xx"
-msgstr "需要硬件 NAT 支持。目前 mt76xx 已实现"
+msgstr ""
 
 msgid "Shortcut-FE flow offloading"
 msgstr "Shortcut-FE 流量分载"
