#!/bin/sh /etc/rc.common
# SPDX-License-Identifier: GPL-2.0-only
#
# Copyright (C) 2022-2023 ImmortalWrt.org

USE_PROCD=1

START=99
STOP=10

CONF="homeproxy"
PROG="/usr/bin/sing-box"
TUNNAME="singtun0"

HP_DIR="/etc/homeproxy"
RUN_DIR="/var/run/homeproxy"
LOG_PATH="$RUN_DIR/homeproxy.log"
DNSMASQ_DIR="/tmp/dnsmasq.d"

IP_TABLE="100"
IP_FWMARK="0x64"
FW4="$(command -v fw4)"

log() {
	echo -e "$(date "+%Y-%m-%d %H:%M:%S") [DAEMON] $*" >> "$LOG_PATH"
}

start_service() {
	config_load "$CONF"

	local routing_mode
	config_get routing_mode "config" "routing_mode" "bypass_mainland_china"

	local outbound_node
	if [ "$routing_mode" != "custom" ]; then
		config_get outbound_node "config" "main_node" "nil"
	else
		config_get outbound_node "routing" "default_outbound" "nil"
	fi

	local server_enabled
	config_get_bool server_enabled "server" "enabled" "0"

	if [ "$outbound_node" = "nil" ] && [ "$server_enabled" = "0" ]; then
		return 1
	fi

	mkdir -p "$RUN_DIR"
	"$HP_DIR"/scripts/generate_sing-box.lua 2>>"$LOG_PATH"

	local inbounds="$(jsonfilter -i "$RUN_DIR/sing-box.json" -e "@.inbounds" 2>"/dev/null")"
	if [ ! -e "$RUN_DIR/sing-box.json" ]; then
		log "Error: failed to generate configuration."
		exit 1
	elif [ -z "$inbounds" ] || [ "$inbounds" = "[ ]" ]; then
		log "Error: no valid inbound found."
		exit 1
	elif ! "$PROG" check --config "$RUN_DIR/sing-box.json" 2>>"$LOG_PATH"; then
		log "Error: wrong configuration detected."
		exit 1
	fi

	if [ "$outbound_node" != "nil" ]; then
		# Auto update
		local auto_update auto_update_time
		config_get_bool auto_update "subscription" "auto_update" "0"
		if [ "auto_update" = "1" ]; then
			config_get auto_update_time "subscription" "auto_update_time" "2"
			echo "0 ${auto_update_time} * * * $HP_DIR/scripts/update_geodata.sh update_version update_subscription" >> "/etc/crontabs/root"
		fi
		# Clean log
		echo -e "*/3 * * * * $HP_DIR/scripts/clean_log.sh" >> "/etc/crontabs/root"
		/etc/init.d/cron restart

		# Hijack DNS
		mkdir -p "$DNSMASQ_DIR"
		cat <<-EOF >> "$DNSMASQ_DIR/dnsmasq-homeproxy.conf"
			no-poll
			no-resolv
			server=8.8.8.8
		EOF
		/etc/init.d/dnsmasq restart >"/dev/null" 2>&1

		# Setup firewall
		ip tuntap add mode tun user root name "$TUNNAME" 2>"/dev/null"
		ip link set "$TUNNAME" up 2>"/dev/null"

		ip route replace default dev "$TUNNAME" table "$IP_TABLE" 2>"/dev/null"
		ip rule add fwmark "$IP_FWMARK" lookup "$IP_TABLE" 2>"/dev/null"

		ip -6 route replace default dev "$TUNNAME" table "$IP_TABLE" 2>"/dev/null"
		ip -6 rule add fwmark "$IP_FWMARK" lookup "$IP_TABLE" 2>"/dev/null"
	fi
	# TODO: add support for iptables based fw3
	if [ -n "$FW4" ]; then
		utpl -S "$HP_DIR/scripts/firewall_nftables.ut" > "$RUN_DIR/fw4.nft"
		fw4 reload >"/dev/null" 2>&1
	fi

	procd_open_instance "sing-box"

	procd_set_param command "$PROG"
	procd_append_param command run --config "$RUN_DIR/sing-box.json"

	procd_set_param limits core="unlimited"
	procd_set_param limits nofile="1000000 1000000"
	procd_set_param stderr 1
	procd_set_param respawn

	procd_close_instance

	echo > "$RUN_DIR/sing-box.log"
	log "$(sing-box version | awk 'NR==1{print $1,$3}') started."
}

stop_service() {
	sed -i "/$CONF/d" "/etc/crontabs/root" 2>"/dev/null"
	/etc/init.d/cron restart >"/dev/null" 2>&1

	# Setup firewall
	ip link set "$TUNNAME" down 2>"/dev/null"
	ip tuntap del mode tun name "$TUNNAME" 2>"/dev/null"

	ip route del default dev "$TUNNAME" table "$IP_TABLE" 2>"/dev/null"
	ip rule del fwmark "$IP_FWMARK" table "$IP_TABLE" 2>"/dev/null"

	ip -6 route del default dev "$TUNNAME" table "$IP_TABLE" 2>"/dev/null"
	ip -6 rule del fwmark "$IP_FWMARK" table "$IP_TABLE" 2>"/dev/null"
	# TODO: add support for iptables based fw3
	if [ -n "$FW4" ]; then
		for i in "homeproxy_mangle_output"; do
			nft flush chain inet fw4 "$i" 2>"/dev/null"
			nft delete chain inet fw4 "$i" 2>"/dev/null"
		done
		for i in "homeproxy_localaddr_v4" "homeproxy_localaddr_v6"; do
			nft flush set inet fw4 "$i" 2>"/dev/null"
			nft delete set inet fw4 "$i" 2>"/dev/null"
		done

		echo > "$RUN_DIR/fw4.nft"
		fw4 reload >"/dev/null" 2>&1
	fi

	# Remove DNS hijack
	rm -f "$DNSMASQ_DIR/dnsmasq-homeproxy.conf"
	/etc/init.d/dnsmasq restart >"/dev/null" 2>&1

	rm -f "$RUN_DIR/sing-box.json" "$RUN_DIR/sing-box.log"

	log "Service stopped."
}

reload_service() {
	log "Reloading service..."

	stop
	start
}

service_triggers() {
	procd_add_reload_trigger "$CONF"
}
