#!/bin/sh

. /usr/share/libubox/jshn.sh

RULES_UC="/etc/zerotier/zerotier.uc"
RULES_NFT="/etc/nftables.d/99-zerotier-rules.nft"

zero_enable="$(uci get zerotier.sample_config.enabled)"

[ "${zero_enable}" -ne "1" ] && exit 0

[ -f "/tmp/zero.log" ] && {
	while [ "$(ifconfig | grep 'zt' | awk '{print $1}')" = "" ]
	do
		sleep 1
	done
}

nat_enable="$(uci get zerotier.sample_config.nat)"
zt0="$(ifconfig | grep 'zt' | awk '{print $1}')"
echo "${zt0}" > "/tmp/zt.nif"

[ "${nat_enable}" -eq "1" ] && {
	for i in ${zt0}
	do
		ip_segment="$(ip route | grep "dev $i proto kernel" | awk '{print $1}')"
		ip_segments="${ip_segments:+$ip_segments\n}${ip_segment}"
	done

	tmp="/tmp/zerotier"
	json_init
	json_add_string o_ifnames "$(echo -e "${zt0}" | awk '{print $1}')"
	json_add_string o_ip_segments "$(echo -e "${ip_segments}" | awk '{print $1}')"
	json_dump -i >"$tmp.json"
	if utpl -F "$tmp.json" -S "$RULES_UC" > "$tmp.nft" && ! cmp -s "$tmp.nft" "$RULES_NFT"; then
		echo "table inet chk {include \"$tmp.nft\";}" > "$tmp.nft.chk"
		! nft -f "$tmp.nft.chk" -c || { mv -f "$tmp.nft" "$RULES_NFT"; fw4 reload; }
		echo "Add zt interface rules success!"
	fi
	rm -f "$tmp.json" "$tmp.nft" "$tmp.nft.chk"
}
