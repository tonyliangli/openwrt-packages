/etc/init.d/miniupnpd enabled || exit 0

# If miniupnpd is not running:
# - check on _any_ event (event updates may contribute to network_find_wan*)

# If miniupnpd _is_ running:
# - check only on ifup (otherwise lease updates etc would cause
#   miniupnpd state loss)

[ "$ACTION" != "ifup" -a "$ACTION" != "ifupdate" ] && /etc/init.d/miniupnpd running && exit 0

lock /var/run/miniupnpd.lock

tmpconf="/var/etc/miniupnpd.conf"
external_iface=$(uci -q get upnpd.config.external_iface)
external_iface6=$(uci -q get upnpd.config.external_iface6)
external_zone=$(uci -q get upnpd.config.external_zone)
internal_iface=$(uci -q get upnpd.config.internal_iface)
[ -x "$(command -v nft)" ] && FW="fw4" || FW="fw3"

. /lib/functions/network.sh

if [ -n "$external_iface" ] ; then
	network_get_device ifname "$external_iface"
else
	if [ -n "$external_zone" ] ; then
		ifname=$($FW -q zone "$external_zone" 2>/dev/null | head -1)
	else
		ifname=$(ip r | grep default | grep -o "dev .*" | awk '{print $2}' | head -1)
	fi
fi
if [ -n "$external_iface6" ] ; then
	network_get_device ifname6 "$external_iface6"
else
	if [ -n "$external_zone" ] ; then
		ifname6=$($FW -q zone "$external_zone" 2>/dev/null | head -1)
	else
		ifname6=$(ip -6 r | grep default | grep -o "dev .*" | awk '{print $2}' | head -1)
	fi
fi

if [ -n "$internal_iface" ] ; then
	network_get_device internal_ifname "$internal_iface"
fi

if [ "$DEVICE" != "$ifname" ] && [ "$DEVICE" != "$ifname6" ] && [ "$DEVICE" != "$internal_ifname" ]; then
	lock -u /var/run/miniupnpd.lock
	exit 0
fi

/etc/init.d/miniupnpd restart

lock -u /var/run/miniupnpd.lock
