#!/bin/sh /etc/rc.common

START=99

BKOPKG="/etc/backup"

sed -i "s/ttyS0::respawn/ttyS0::askfirst/g" /etc/inittab

if [ ! -f "$BKOPKG/user_installed.opkg" ]; then
	touch /etc/inited
fi

failedinstall() {
while [[ -f $BKOPKG/failed.txt && $c4 -le 4 ]]; do
	for ipk in $(cat $BKOPKG/failed.txt); do
		opkg install --force-overwrite --force-checksum --force-depends $ipk 2>&1 | sed -e "s/^/$(date +%Y-%m-%d" "%H:%M:%S) /" >>/tmp/opkgupdate.log 2>&1 || true
		[[ "$(opkg list-installed | cut -f 1 -d ' ' | grep -w $ipk)" ]] && {
			sed -i "/^$ipk$/d" $BKOPKG/failed.txt
			sed -i "\$a $ipk" $BKOPKG/user_installed.opkg
			if [[ "$ipk" == luci-app-* ]]; then
				opkg install --force-overwrite --force-checksum luci-i18n-"$(echo $ipk | cut -d - -f 3-)"-zh-cn 2>&1 | sed -e "s/^/$(date +%Y-%m-%d" "%H:%M:%S) /" >>/tmp/opkgupdate.log 2>&1 || true
			fi
		}
	done
	[ -n "$(cat $BKOPKG/failed.txt)" ] || rm -f $BKOPKG/failed.txt
		let c4++
		sleep 1
		rm -f /var/lock/opkg.lock
	done
	
}

opkginstall() {
	def="$(opkg list-upgradable | cut -f 1 -d ' ' | grep -vE 'opkg|kmod-|luci-lib-fs|firewall|base-files|luci-base|busybox|^?nginx($|-)|dnsmasq-full|coremark|miniupnpd|luci-mod-network|luci-mod-status|luci-mod-system')"
	if [ ! -f /etc/inited ]; then
		insed="$(cat $BKOPKG/user_installed.opkg)"
	fi
	upopkg="$insed
	$def"
	[ "$(echo "$upopkg" | grep "luci-app-adguardhome")" ] && {
		sed -i "/luci-app-adguardhome/d" /etc/backup/user_installed.opkg
		sed -i '$a luci-app-adguardhome' /etc/backup/user_installed.opkg
	}
	if [ "$upopkg" != " " ]; then
		for ipk in $upopkg; do
		while :; do
			opkg install --force-overwrite --force-checksum --force-depends $ipk 2>&1 | sed -e "s/^/$(date +%Y-%m-%d" "%H:%M:%S) /" >>/tmp/opkgupdate.log 2>&1 || true
			[[ "$(opkg list-installed | cut -f 1 -d ' ' | grep -w $ipk)" ]] && {
				if [[ "$ipk" == luci-app-* ]]; then
					opkg install --force-overwrite --force-checksum luci-i18n-"$(echo $ipk | cut -d - -f 3-)"-zh-cn 2>&1 | sed -e "s/^/$(date +%Y-%m-%d" "%H:%M:%S) /" >>/tmp/opkgupdate.log 2>&1 || true
				fi
				break
			}
			[ $c2 -eq 3 ] && {
				echo $ipk >> $BKOPKG/failed.txt
				sed -i "/^$ipk$/d" $BKOPKG/user_installed.opkg
					break
				} || let c2++
			sleep 1
			rm -f /var/lock/opkg.lock
			done
		done
		rm -f /etc/config/*-opkg
	fi
}

opkgupgrade() {
mkdir -p $BKOPKG
if [ ! -f /etc/inited ]; then
	[ "$(uci -q get dhcp.@dnsmasq[0].noresolv)" == 1 ] && {
		uci -q del dhcp.@dnsmasq[0].noresolv
		uci commit dhcp
		/etc/init.d/dnsmasq reload
	}
# sh -c "cat '/usr/share/patch/adblock.patch'  | patch -d '/' -p1 --forward" >/dev/null 2>&1
fi
	c1=0
	c2=0
	c3=0
	c4=0
	while ! curl --retry 3 -m 5 https://op.supes.top >/dev/null 2>&1;do
		echo "无法连接仓库服务器,请检查网络. $c1" | sed -e "s/^/$(date +%Y-%m-%d" "%H:%M:%S) /" >>/tmp/opkgupdate.log
		[ $c1 -eq 120 ] && return || let c1++
		sleep 5
	done
			while :; do
				opkg update | sed -e "s/^/$(date +%Y-%m-%d" "%H:%M:%S) /" >>/tmp/opkgupdate.log 2>&1
				if [ "$?" == "0" ]; then
					failedinstall
					mv -f $BKOPKG/failed.txt $BKOPKG/failed_.txt >/dev/null 2>&1
					opkginstall
					failedinstall
					touch /etc/inited
					rm -f /var/lock/opkg.lock
					break
				fi
				[ $c3 -eq 10 ] && break || let c3++
			done
			rm -f /var/lock/opkg.lock
}

start() {
(
	if [[ ! -f /etc/inited || -f $BKOPKG/failed.txt || "$(uci -q get wizard.default.autoupgrade_pkg)" != '0' ]]; then
		opkgupgrade || true
	fi
	rm -f /var/lock/opkg.lock

	[[ -f "/bin/coremark" && ! -f "/etc/bench.log" && "$(uci -q get wizard.default.coremark)" == '1' ]] && {
		sleep 5
		/bin/coremark >/tmp/coremark.log
		cat /tmp/coremark.log | grep "CoreMark 1.0" | cut -d "/" -f 1 | cut -d "." -f -2 >/etc/bench.log
		sed -i 's/CoreMark 1.0/(CpuMark/g' /etc/bench.log
		echo " Scores)" >>/etc/bench.log
	}

rm -f $LOCK
) &
}

stop() {
killall -9 $(ps -w | grep /etc/init.d/packages | grep -v grep | awk '{print$1}') 2>/dev/null
}

restart() {
stop
rm -f /etc/inited
start
}
